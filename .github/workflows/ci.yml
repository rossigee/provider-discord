name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  packages: write
  id-token: write
  actions: read

env:
  GO_VERSION: '1.25.1'
  GOLANGCI_VERSION: 'latest'
  GOLANGCILINT_VERSION: 'latest'
  # Registry configuration
  PRIMARY_REGISTRY: ghcr.io/rossigee
  ENABLE_HARBOR_PUBLISH: false
  ENABLE_UPBOUND_PUBLISH: false

jobs:
  detect-noop:
    runs-on: ubuntu-24.04
    outputs:
      noop: ${{ steps.noop.outputs.should_skip }}
    steps:
      - name: Detect No-op Changes
        id: noop
        uses: fkirc/skip-duplicate-actions@v5.3.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          paths_ignore: '["**.md", "**.png", "**.jpg"]'
          do_not_skip: '["workflow_dispatch", "schedule", "push"]'

  lint:
    runs-on: ubuntu-24.04
    needs: detect-noop
    if: needs.detect-noop.outputs.noop != 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-v2-${{ hashFiles('**/go.sum') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-go-v2-${{ hashFiles('**/go.sum') }}-
            ${{ runner.os }}-go-v2-

      - name: Vendor Dependencies
        run: go mod vendor

      - name: Install Crossplane CLI
        run: |
          mkdir -p .cache/tools/linux_x86_64
          curl -fsSLo .cache/tools/linux_x86_64/crossplane-cli-v1.20.0 --create-dirs https://releases.crossplane.io/stable/v1.20.0/bin/linux_amd64/crank?source=build
          chmod +x .cache/tools/linux_x86_64/crossplane-cli-v1.20.0

      - name: Lint
        run: make lint

  check-diff:
    runs-on: ubuntu-24.04
    needs: detect-noop
    if: needs.detect-noop.outputs.noop != 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-v2-${{ hashFiles('**/go.sum') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-go-v2-${{ hashFiles('**/go.sum') }}-
            ${{ runner.os }}-go-v2-

      - name: Vendor Dependencies
        run: go mod vendor

      - name: Check Diff
        run: |
          make reviewable
          git diff --exit-code

  unit-tests:
    runs-on: ubuntu-24.04
    needs: detect-noop
    if: needs.detect-noop.outputs.noop != 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-v2-${{ hashFiles('**/go.sum') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-go-v2-${{ hashFiles('**/go.sum') }}-
            ${{ runner.os }}-go-v2-

      - name: Vendor Dependencies
        run: go mod vendor

      - name: Run Unit Tests
        run: |
          make test

      - name: Upload Coverage Reports
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.out
          verbose: true

  publish-artifacts:
    runs-on: ubuntu-24.04
    needs: [lint, check-diff, unit-tests]
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-v2-${{ hashFiles('**/go.sum') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-go-v2-${{ hashFiles('**/go.sum') }}-
            ${{ runner.os }}-go-v2-

      - name: Vendor Dependencies
        run: go mod vendor

      - name: Install Crossplane CLI
        run: |
          mkdir -p .cache/tools/linux_x86_64
          curl -fsSLo .cache/tools/linux_x86_64/crossplane-cli-v1.20.0 --create-dirs https://releases.crossplane.io/stable/v1.20.0/bin/linux_amd64/crank?source=build
          chmod +x .cache/tools/linux_x86_64/crossplane-cli-v1.20.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_TOKEN }}


      - name: Build and Push to Primary Registry
        run: |
          # Build and push to GitHub Container Registry (primary)
          echo "Repository: ${{ github.repository }}"
          echo "Repository owner: ${{ github.repository_owner }}"
          make build
          make publish REGISTRY_ORGS="ghcr.io/${{ github.repository_owner }}" XPKG_REG_ORGS="ghcr.io/${{ github.repository_owner }}"
        env:
          BUILD_ARGS: "--load"


      - name: Build and Push to Upbound Registry (Optional)
        if: env.ENABLE_UPBOUND_PUBLISH == 'true'
        run: |
          # Push to Upbound Registry (only if token is available)
          if [ -n "$UPBOUND_TOKEN" ]; then
            make publish REGISTRY_ORGS="xpkg.upbound.io/crossplane-contrib"
          else
            echo "UPBOUND_TOKEN not available, skipping Upbound registry push"
          fi
        env:
          UPBOUND_TOKEN: ${{ secrets.UPBOUND_TOKEN }}